{
	// Place your ocean workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"Import React": {
		"scope": "javascript,javascriptreact,typescript,typescriptreact",
		"prefix": "imr",
		"body": [
			"import React from 'react';",
			"$0"
		],
		"description": "Import React"
	},

	"Export functional component": {
		"scope": "typescriptreact",
		"prefix": "xfc",
		"body": [
			"export function $1({",
			"",
			"}: $2) : JSX.Element {",
			"$0",
			"}"
		],
		"description": "Export a new functional component"
	},

	"React.useEffect": {
		"scope": "javascript,javascriptreact,typescript,typescriptreact",
		"prefix": "rue",
		"body": [
			"React.useEffect(() => $1, [])"
		],
		"description": "Run an effect inside a React component"
	},

	"React.useState": {
		"scope": "javascript,javascriptreact,typescript,typescriptreact",
		"prefix": "rus",
		"body": [
			"const [$1, $2] = React.useState($3);",
			"$0"
		],
		"description": "Use the React useState() hook"
	},

	"React.useCallback": {
		"scope": "javascript,javascriptreact,typescript,typescriptreact",
		"prefix": "ruc",
		"body": [
			"const $1 = React.useCallback(($2) => {",
			"$0",
			"}, []);",
		],
		"description": "Use the React useCallback() hook"
	},

	"React.useMemo": {
		"scope": "javascriptreact,javascript,typescriptreact,typescript",
		"prefix": "rum",
		"body": [
			"const $1 = React.useMemo(() => $2, []);"
		],
		"description": "Use the React useMemo() hook"
	}
}